// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yhiot.Persistence.Context;

#nullable disable

namespace Yhiot.Persistence.Migrations
{
    [DbContext(typeof(YhiotContext))]
    partial class YhiotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Yhiot.Domain.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExameName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Medico")
                        .HasColumnType("TEXT");

                    b.Property<string>("cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("userAut")
                        .HasColumnType("TEXT");

                    b.Property<string>("userInterface")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("agendamentos");
                });

            modelBuilder.Entity("Yhiot.Domain.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("exAct")
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("exName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("exRegister")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("exam");
                });

            modelBuilder.Entity("Yhiot.Domain.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScheduleActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchedulePatient")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchedulePatientCpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ScheduleRegistration")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("UserId");

                    b.ToTable("schedule");
                });

            modelBuilder.Entity("Yhiot.Domain.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("data")
                        .HasColumnType("TEXT");

                    b.Property<int>("userAut")
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("userCpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("userEmail")
                        .HasColumnType("TEXT");

                    b.Property<int>("userInterface")
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("userName")
                        .HasColumnType("TEXT");

                    b.Property<string>("userPassword")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Yhiot.Domain.Schedule", b =>
                {
                    b.HasOne("Yhiot.Domain.Exam", null)
                        .WithMany("Schedules")
                        .HasForeignKey("ExamId");

                    b.HasOne("Yhiot.Domain.User", "User")
                        .WithMany("Schedules")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Yhiot.Domain.Exam", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Yhiot.Domain.User", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
